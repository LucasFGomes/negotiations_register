{"version":3,"sources":["../../app-es6/services/NegotiationsService.js"],"names":["Negotiation","HttpService","NegotiationDAO","ConnectionFactory","NegotiationsService","_httpService","Promise","resolve","reject","get","then","negotiations","map","obj","Date","data","quantidade","valor","catch","error","console","log","all","getNegotiationsWeek","getNegotiationsWeekPrevious","getNegotiationsWeekPreviousToLast","periods","reduce","period","concat","Error","negotiation","getConnection","connection","dao","insert","findAll","deleteAll","currentList","getNegotiations","filter","some","equals","negotiationExisting"],"mappings":"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","file":"NegotiationsService.js","sourcesContent":["import Negotiation from '../models/Negotiation';\r\nimport HttpService from './HttpService';\r\nimport NegotiationDAO from '../dao/NegotiationDAO';\r\nimport ConnectionFactory from '../services/ConnectionFactory';\r\n\r\nexport default class NegotiationsService {\r\n\r\n  constructor() {\r\n    this._httpService = new HttpService();\r\n  }\r\n\r\n  getNegotiationsWeek() {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this._httpService.get('negociacoes/semana').then((negotiations) => {\r\n        resolve(negotiations.map((obj) => new Negotiation(new Date(obj.data), obj.quantidade, obj.valor)));\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        reject('Não foi possível importar as negociaçoes da semana.');\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  getNegotiationsWeekPrevious() {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this._httpService.get('negociacoes/anterior').then((negotiations) => {\r\n        resolve(negotiations.map((obj) => new Negotiation(new Date(obj.data), obj.quantidade, obj.valor)));\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        reject('Não foi possível importar as negociaçoes da semana anterior.');\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  getNegotiationsWeekPreviousToLast() {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this._httpService.get('negociacoes/retrasada').then((negotiations) => {\r\n        resolve(negotiations.map((obj) => new Negotiation(new Date(obj.data), obj.quantidade, obj.valor)));\r\n      }).catch((error) => {\r\n        console.log(error);\r\n        reject('Não foi possível importar as negociaçoes da semana retrasada.');\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  getNegotiations() {\r\n\r\n    return Promise.all([\r\n      this.getNegotiationsWeek(),\r\n      this.getNegotiationsWeekPrevious(),\r\n      this.getNegotiationsWeekPreviousToLast(),\r\n    ]).then((periods) => {\r\n\r\n      let negotiations = periods.reduce((data, period) => data.concat(period), []);\r\n      return negotiations;\r\n\r\n    }).catch(error => {\r\n      throw new Error(error)\r\n    });\r\n\r\n  }\r\n\r\n  register(negotiation) {\r\n\r\n    return ConnectionFactory.getConnection()\r\n      .then(connection => new NegotiationDAO(connection))\r\n      .then(dao => dao.insert(negotiation))\r\n      .then(() => 'Negociação adicionada com sucesso!')\r\n      .catch(error => {\r\n        console.log(error);\r\n        throw new Error('Não foi possível adicionar a negociação.');\r\n      });\r\n\r\n  }\r\n\r\n  toList() {\r\n\r\n    return ConnectionFactory.getConnection()\r\n      .then(connection => new NegotiationDAO(connection))\r\n      .then(dao => dao.findAll())\r\n      .catch(error => {\r\n        console.log(error);\r\n        throw new Error('Não foi possível obter as negociações.');\r\n      });\r\n\r\n  }\r\n\r\n  delete() {\r\n\r\n    return ConnectionFactory.getConnection()\r\n      .then(connection => new NegotiationDAO(connection))\r\n      .then(dao => dao.deleteAll())\r\n      .then(() => 'Negociações apagadas com sucesso.')\r\n      .catch(error => {\r\n        console.log(error);\r\n        throw new Error('Não foi possível apagar as negociações.');\r\n      });\r\n\r\n  }\r\n\r\n  importNegotiations(currentList) {\r\n\r\n    return this.getNegotiations()\r\n      .then(negotiations =>\r\n        negotiations.filter(negotiation =>\r\n          !currentList.some(negotiationExisting => negotiation.equals(negotiationExisting)))\r\n      )\r\n      .catch(error => {\r\n        console.log(error);\r\n        throw new Error('Não foi possível importar as negociações.');\r\n      })\r\n\r\n  }\r\n\r\n}"]}